@startuml
class Defensa.EstadoDefensaIncompleto {
- int tiempoConstruccion
+ int atacar(List<Pasarela>,int)
+ void siguienteEstado(Defensa)
}
interface Defensa.EstadoDefensa {
+ int atacar(List<Pasarela>,int)
+ void siguienteEstado(Defensa)
}
abstract class Defensa.Defensa {
# int costeEnCreditos
# int rango
- Posicion posicion
# int danio
# EstadoDefensa estado
# List<Pasarela> pasarelasEnRango
+ void establecerPasarelasEnRango(Meta)
+ boolean comprate(Recursos)
+ void establecerEstado(EstadoDefensa)
+ void siguienteEstado()
+ int atacar()
+ Posicion getPosicion()
}
class Defensa.EstadoDefensaCompleto {
- boolean noAtacoEnEsteTurno
+ int atacar(List<Pasarela>,int)
+ int atacarEnemigos(Pasarela,List<Enemigo>,int)
+ void siguienteEstado(Defensa)
}
class Defensa.TorreBlanca {
}
class Defensa.TorrePlateada {
}


Defensa.EstadoDefensa <|.. Defensa.EstadoDefensaIncompleto
Defensa.EstadoDefensa <|.. Defensa.EstadoDefensaCompleto
Defensa.Defensa <|-- Defensa.TorreBlanca
Defensa.Defensa <|-- Defensa.TorrePlateada
@enduml